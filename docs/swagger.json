{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water tracker",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of water tracker"
  },
  "servers": [
    {
      "url": "https://project-backend-darkhorsesteam.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "User",
      "description": "Operations about user info."
    },
    {
      "name": "Water",
      "description": "Operations about water records."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "johndoe@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "JohnDoe09483"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully register a user"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "_id"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "2917348074el2p7"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Register a user failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "johndoe@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "JohnDoe09483"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully login a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully login a user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "HJeyebgvKdVUfC5Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Login a user failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Email or password invalid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "c247ff16a8e4fab"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User is successfully logouted"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user session by refresh token",
        "operationId": "refreshUserSession",
        "description": "Refresh user session by refresh token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "refreshToken",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          },
          {
            "in": "cookie",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "c247ff16a8e4fab"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed the session!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "HJeyebgvKdVUfC5Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Refresh a user failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Refresh token expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user's information",
        "operationId": "getUserData",
        "description": "Get user's information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get user information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not found contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact with id 65ca67e7ae7f10c88b598384 not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/change-water-rate": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Patch user's daily norma water intake",
        "operationId": "patchUserWaterRate",
        "description": "Patch user's daily norma water intake",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "dailyNorma"
                ],
                "properties": {
                  "dailyNorma": {
                    "description": "User's daily norma water intake in ml (max: 15000)",
                    "type": "number",
                    "example": 1500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated a water rate!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a water rate!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "dailyNorma"
                      ],
                      "properties": {
                        "dailyNorma": {
                          "description": "User's daily norma water intake in ml (max: 15000)",
                          "type": "number",
                          "example": 1500
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not found contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact with id 65ca67e7ae7f10c88b598384 not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/update-info": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Patch user's information",
        "operationId": "patchUserInfo",
        "description": "Patch user's information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "johndoe@gmail.com"
                  },
                  "gender": {
                    "description": "User's gender",
                    "type": "string",
                    "enum": [
                      "man",
                      "woman"
                    ]
                  },
                  "currentPwd": {
                    "description": "User's current password",
                    "type": "string",
                    "example": "gfwifow798"
                  },
                  "password": {
                    "description": "User's new password",
                    "type": "string",
                    "example": "gfwifow799"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched the user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched the user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Sorry, but we don`t have such a user!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/change-photo": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Patch user's avatar/photo",
        "operationId": "patchUserPhoto",
        "description": "Patch user's photo",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "photo"
                ],
                "properties": {
                  "photo": {
                    "description": "File of user's photo (jpeg/png)",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated user's photo!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated user's photo!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not found contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact with id 65ca67e7ae7f10c88b598384 not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Post water record",
        "operationId": "postWaterRecord",
        "description": "Post water record",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "volume",
                  "dailyNorma"
                ],
                "properties": {
                  "date": {
                    "description": "Date and time when water was consumed",
                    "type": "string",
                    "example": "2024-10-31T20:21"
                  },
                  "volume": {
                    "description": "Amount of water in ml that was intake (max: 5000)",
                    "type": "number",
                    "example": 250
                  },
                  "dailyNorma": {
                    "description": "User's daily norma in ml when record was created",
                    "type": "number",
                    "example": 1500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully added water record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully added water!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/{id}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Patch water record",
        "operationId": "patchWaterRecord",
        "description": "Patch water record",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "volume",
                  "date"
                ],
                "properties": {
                  "volume": {
                    "description": "Amount of water in ml that was intake (max: 5000)",
                    "type": "number",
                    "example": 250
                  },
                  "date": {
                    "description": "Date and time when water was consumed",
                    "type": "string",
                    "example": "2024-10-31T20:21"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patched a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully update water record"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Water record not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Water record not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water record",
        "operationId": "deleteWaterRecord",
        "description": "Delete water record",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Water record deleted"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Water not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Water not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/water/today": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get user's water records for today",
        "operationId": "getWaterRecordsToday",
        "description": "Get user's water records for today",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get user information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found today's water data"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "totalWaterPercent"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/water"
                          }
                        },
                        "totalWaterPercent": {
                          "type": "string",
                          "example": "60%"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/month": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Get water records for certain month",
        "operationId": "getWaterRecordsMonth",
        "description": "Get water records for certain month",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "month"
                ],
                "properties": {
                  "month": {
                    "description": "Number of month to get water records for this period (min: 1, max: 12)",
                    "type": "number",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully found records for this month",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found records for this month"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "date",
                          "dailyNorma",
                          "consumptionCount",
                          "percentage"
                        ],
                        "properties": {
                          "date": {
                            "description": "Date when water was consumed",
                            "type": "string",
                            "example": "2024-10-31"
                          },
                          "dailyNorma": {
                            "description": "User's daily norma in ml when record was created",
                            "type": "number",
                            "example": 1500
                          },
                          "consumptionCount": {
                            "description": "Number of water records for this date",
                            "type": "number",
                            "example": 6
                          },
                          "percentage": {
                            "description": "Percentage of water intake to user's daily norma",
                            "type": "string",
                            "example": "60%"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Month is required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Month is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Authorization header is not found"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "dailyNorma",
          "gender",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "johndoe@gmail.com"
          },
          "dailyNorma": {
            "description": "User's daily norma of water",
            "type": "number",
            "default": 1500,
            "example": 1200
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "man",
              "woman"
            ],
            "default": "woman"
          },
          "photo": {
            "description": "Link to user's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          },
          "createdAt": {
            "description": "Time when user is created",
            "type": "string",
            "example": "2024-09-20T11:05:13.014+00:00"
          },
          "updatedAt": {
            "description": "Time when user is updated",
            "type": "string",
            "example": "2024-09-20T11:05:13.014+00:00"
          }
        }
      },
      "water": {
        "type": "object",
        "required": [
          "_id",
          "date",
          "dailyNorma",
          "volume",
          "userId",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "description": "Water record's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "date": {
            "description": "Date and time when water was consumed",
            "type": "string",
            "example": "2024-10-31T20:21"
          },
          "dailyNorma": {
            "description": "User's daily norma when record was created",
            "type": "number",
            "example": 1500
          },
          "volume": {
            "description": "Amount of water in ml that was intake",
            "type": "number",
            "example": 250
          },
          "userId": {
            "description": "Id of the user who add this water record",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "createdAt": {
            "description": "Time when water record is created",
            "type": "string",
            "example": "2024-09-20T11:05:13.014+00:00"
          },
          "updatedAt": {
            "description": "Time when water record is updated",
            "type": "string",
            "example": "2024-09-20T11:05:13.014+00:00"
          }
        }
      }
    }
  }
}